Archive member included because of file (symbol)

/usr/avr/lib/libc.a(exit.o)   /usr/lib/gcc/avr/4.2.2/../../../../avr/lib/avr5/crtm169.o (exit)
/usr/lib/gcc/avr/4.2.2/avr5/libgcc.a(_exit.o)
                              /usr/avr/lib/libc.a(exit.o) (_exit)
/usr/lib/gcc/avr/4.2.2/avr5/libgcc.a(_copy_data.o)
                              heyes.o (__do_copy_data)
/usr/lib/gcc/avr/4.2.2/avr5/libgcc.a(_clear_bss.o)
                              heyes.o (__do_clear_bss)

Memory Configuration

Name             Origin             Length             Attributes
text             0x00000000         0x00020000         xr
data             0x00800060         0x0000ffa0         rw !x
eeprom           0x00810000         0x00010000         rw !x
fuse             0x00820000         0x00000400         rw !x
lock             0x00830000         0x00000400         rw !x
signature        0x00840000         0x00000400         rw !x
*default*        0x00000000         0xffffffff

Linker script and memory map

Address of section .data set to 0x800100
LOAD /usr/lib/gcc/avr/4.2.2/../../../../avr/lib/avr5/crtm169.o
LOAD heyes.o
LOAD /usr/avr/lib/libc.a
LOAD /usr/lib/gcc/avr/4.2.2/avr5/libgcc.a
LOAD /usr/avr/lib/libc.a
LOAD /usr/lib/gcc/avr/4.2.2/avr5/libgcc.a

.hash
 *(.hash)

.dynsym
 *(.dynsym)

.dynstr
 *(.dynstr)

.gnu.version
 *(.gnu.version)

.gnu.version_d
 *(.gnu.version_d)

.gnu.version_r
 *(.gnu.version_r)

.rel.init
 *(.rel.init)

.rela.init
 *(.rela.init)

.rel.text
 *(.rel.text)
 *(.rel.text.*)
 *(.rel.gnu.linkonce.t*)

.rela.text
 *(.rela.text)
 *(.rela.text.*)
 *(.rela.gnu.linkonce.t*)

.rel.fini
 *(.rel.fini)

.rela.fini
 *(.rela.fini)

.rel.rodata
 *(.rel.rodata)
 *(.rel.rodata.*)
 *(.rel.gnu.linkonce.r*)

.rela.rodata
 *(.rela.rodata)
 *(.rela.rodata.*)
 *(.rela.gnu.linkonce.r*)

.rel.data
 *(.rel.data)
 *(.rel.data.*)
 *(.rel.gnu.linkonce.d*)

.rela.data
 *(.rela.data)
 *(.rela.data.*)
 *(.rela.gnu.linkonce.d*)

.rel.ctors
 *(.rel.ctors)

.rela.ctors
 *(.rela.ctors)

.rel.dtors
 *(.rel.dtors)

.rela.dtors
 *(.rela.dtors)

.rel.got
 *(.rel.got)

.rela.got
 *(.rela.got)

.rel.bss
 *(.rel.bss)

.rela.bss
 *(.rela.bss)

.rel.plt
 *(.rel.plt)

.rela.plt
 *(.rela.plt)

.text           0x00000000      0x3b8
 *(.vectors)
 .vectors       0x00000000       0x5c /usr/lib/gcc/avr/4.2.2/../../../../avr/lib/avr5/crtm169.o
                0x00000000                __vectors
                0x00000000                __vector_default
 *(.vectors)
 *(.progmem.gcc*)
 *(.progmem*)
 .progmem.data  0x0000005c      0x10b heyes.o
                0x00000136                strGlanceRight2
                0x0000006f                strLookStraightAhead
                0x0000005c                C0C1
                0x00000068                strSimpleTest
                0x00000098                strSlowBlink
                0x0000014b                strGlanceLeft1
                0x00000159                strGlanceLeft3
                0x0000013d                strGlanceRight3
                0x0000012f                strGlanceRight1
                0x00000066                strReset
                0x00000144                strGlanceRight4
                0x00000160                strGlanceLeft4
                0x00000152                strGlanceLeft2
                0x00000061                c0c1
                0x00000168                . = ALIGN (0x2)
 *fill*         0x00000167        0x1 00
                0x00000168                __trampolines_start = .
 *(.trampolines)
 .trampolines   0x00000168        0x0 linker stubs
 *(.trampolines*)
                0x00000168                __trampolines_end = .
 *(.jumptables)
 *(.jumptables*)
 *(.lowtext)
 *(.lowtext*)
                0x00000168                __ctors_start = .
 *(.ctors)
                0x00000168                __ctors_end = .
                0x00000168                __dtors_start = .
 *(.dtors)
                0x00000168                __dtors_end = .
 SORT(*)(.ctors)
 SORT(*)(.dtors)
 *(.init0)
 .init0         0x00000168        0x0 /usr/lib/gcc/avr/4.2.2/../../../../avr/lib/avr5/crtm169.o
                0x00000168                __init
 *(.init0)
 *(.init1)
 *(.init1)
 *(.init2)
 .init2         0x00000168        0xc /usr/lib/gcc/avr/4.2.2/../../../../avr/lib/avr5/crtm169.o
 *(.init2)
 *(.init3)
 *(.init3)
 *(.init4)
 .init4         0x00000174       0x16 /usr/lib/gcc/avr/4.2.2/avr5/libgcc.a(_copy_data.o)
                0x00000174                __do_copy_data
 .init4         0x0000018a       0x10 /usr/lib/gcc/avr/4.2.2/avr5/libgcc.a(_clear_bss.o)
                0x0000018a                __do_clear_bss
 *(.init4)
 *(.init5)
 *(.init5)
 *(.init6)
 *(.init6)
 *(.init7)
 *(.init7)
 *(.init8)
 *(.init8)
 *(.init9)
 .init9         0x0000019a        0x8 /usr/lib/gcc/avr/4.2.2/../../../../avr/lib/avr5/crtm169.o
 *(.init9)
 *(.text)
 .text          0x000001a2        0x4 /usr/lib/gcc/avr/4.2.2/../../../../avr/lib/avr5/crtm169.o
                0x000001a2                __vector_22
                0x000001a2                __vector_1
                0x000001a2                __vector_12
                0x000001a2                __bad_interrupt
                0x000001a2                __vector_6
                0x000001a2                __vector_3
                0x000001a2                __vector_11
                0x000001a2                __vector_13
                0x000001a2                __vector_17
                0x000001a2                __vector_19
                0x000001a2                __vector_7
                0x000001a2                __vector_5
                0x000001a2                __vector_4
                0x000001a2                __vector_9
                0x000001a2                __vector_2
                0x000001a2                __vector_21
                0x000001a2                __vector_15
                0x000001a2                __vector_8
                0x000001a2                __vector_14
                0x000001a2                __vector_10
                0x000001a2                __vector_16
                0x000001a2                __vector_18
                0x000001a2                __vector_20
 .text          0x000001a6      0x20e heyes.o
                0x000001f8                slowBlink
                0x000001a6                spiOut
                0x000002fa                main
                0x000001d8                stringOut
                0x00000202                glanceRight
                0x000002d6                fastBlink
                0x0000026c                glanceLeft
 .text          0x000003b4        0x2 /usr/avr/lib/libc.a(exit.o)
                0x000003b4                exit
 .text          0x000003b6        0x0 /usr/lib/gcc/avr/4.2.2/avr5/libgcc.a(_exit.o)
 .text          0x000003b6        0x0 /usr/lib/gcc/avr/4.2.2/avr5/libgcc.a(_copy_data.o)
 .text          0x000003b6        0x0 /usr/lib/gcc/avr/4.2.2/avr5/libgcc.a(_clear_bss.o)
                0x000003b6                . = ALIGN (0x2)
 *(.text.*)
 .text.libgcc   0x000003b6        0x0 /usr/lib/gcc/avr/4.2.2/avr5/libgcc.a(_exit.o)
 .text.libgcc   0x000003b6        0x0 /usr/lib/gcc/avr/4.2.2/avr5/libgcc.a(_copy_data.o)
 .text.libgcc   0x000003b6        0x0 /usr/lib/gcc/avr/4.2.2/avr5/libgcc.a(_clear_bss.o)
                0x000003b6                . = ALIGN (0x2)
 *(.fini9)
 .fini9         0x000003b6        0x0 /usr/lib/gcc/avr/4.2.2/avr5/libgcc.a(_exit.o)
                0x000003b6                _exit
 *(.fini9)
 *(.fini8)
 *(.fini8)
 *(.fini7)
 *(.fini7)
 *(.fini6)
 *(.fini6)
 *(.fini5)
 *(.fini5)
 *(.fini4)
 *(.fini4)
 *(.fini3)
 *(.fini3)
 *(.fini2)
 *(.fini2)
 *(.fini1)
 *(.fini1)
 *(.fini0)
 .fini0         0x000003b6        0x2 /usr/lib/gcc/avr/4.2.2/avr5/libgcc.a(_exit.o)
 *(.fini0)
                0x000003b8                _etext = .

.data           0x00800100        0x0 load address 0x000003b8
                0x00800100                PROVIDE (__data_start, .)
 *(.data)
 .data          0x00800100        0x0 /usr/lib/gcc/avr/4.2.2/../../../../avr/lib/avr5/crtm169.o
 .data          0x00800100        0x0 heyes.o
 .data          0x00800100        0x0 /usr/avr/lib/libc.a(exit.o)
 .data          0x00800100        0x0 /usr/lib/gcc/avr/4.2.2/avr5/libgcc.a(_exit.o)
 .data          0x00800100        0x0 /usr/lib/gcc/avr/4.2.2/avr5/libgcc.a(_copy_data.o)
 .data          0x00800100        0x0 /usr/lib/gcc/avr/4.2.2/avr5/libgcc.a(_clear_bss.o)
 *(.data*)
 *(.rodata)
 *(.rodata*)
 *(.gnu.linkonce.d*)
                0x00800100                . = ALIGN (0x2)
                0x00800100                _edata = .
                0x00800100                PROVIDE (__data_end, .)

.bss            0x00800100        0x0 load address 0x000003b8
                0x00800100                PROVIDE (__bss_start, .)
 *(.bss)
 .bss           0x00800100        0x0 /usr/lib/gcc/avr/4.2.2/../../../../avr/lib/avr5/crtm169.o
 .bss           0x00800100        0x0 heyes.o
 .bss           0x00800100        0x0 /usr/avr/lib/libc.a(exit.o)
 .bss           0x00800100        0x0 /usr/lib/gcc/avr/4.2.2/avr5/libgcc.a(_exit.o)
 .bss           0x00800100        0x0 /usr/lib/gcc/avr/4.2.2/avr5/libgcc.a(_copy_data.o)
 .bss           0x00800100        0x0 /usr/lib/gcc/avr/4.2.2/avr5/libgcc.a(_clear_bss.o)
 *(.bss*)
 *(COMMON)
                0x00800100                PROVIDE (__bss_end, .)
                0x000003b8                __data_load_start = LOADADDR (.data)
                0x000003b8                __data_load_end = (__data_load_start + SIZEOF (.data))

.noinit         0x00800100        0x0
                0x00800100                PROVIDE (__noinit_start, .)
 *(.noinit*)
                0x00800100                PROVIDE (__noinit_end, .)
                0x00800100                _end = .
                0x00800100                PROVIDE (__heap_start, .)

.eeprom         0x00810000        0x0
 *(.eeprom*)
                0x00810000                __eeprom_end = .

.fuse
 *(.fuse)
 *(.lfuse)
 *(.hfuse)
 *(.efuse)

.lock
 *(.lock*)

.signature
 *(.signature*)

.stab           0x00000000     0x1554
 *(.stab)
 .stab          0x00000000      0x378 /usr/lib/gcc/avr/4.2.2/../../../../avr/lib/avr5/crtm169.o
 .stab          0x00000378     0x11b8 heyes.o
                               0x11c4 (size before relaxing)
 .stab          0x00001530       0x24 /usr/avr/lib/libc.a(exit.o)
                                 0x30 (size before relaxing)

.stabstr        0x00000000      0xcdc
 *(.stabstr)
 .stabstr       0x00000000      0xcdc /usr/lib/gcc/avr/4.2.2/../../../../avr/lib/avr5/crtm169.o

.stab.excl
 *(.stab.excl)

.stab.exclstr
 *(.stab.exclstr)

.stab.index
 *(.stab.index)

.stab.indexstr
 *(.stab.indexstr)

.comment
 *(.comment)

.debug
 *(.debug)

.line
 *(.line)

.debug_srcinfo
 *(.debug_srcinfo)

.debug_sfnames
 *(.debug_sfnames)

.debug_aranges
 *(.debug_aranges)

.debug_pubnames
 *(.debug_pubnames)

.debug_info
 *(.debug_info)
 *(.gnu.linkonce.wi.*)

.debug_abbrev
 *(.debug_abbrev)

.debug_line
 *(.debug_line)

.debug_frame
 *(.debug_frame)

.debug_str
 *(.debug_str)

.debug_loc
 *(.debug_loc)

.debug_macinfo
 *(.debug_macinfo)
OUTPUT(heyes.out elf32-avr)
LOAD linker stubs
