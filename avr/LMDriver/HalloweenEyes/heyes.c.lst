
heyes.o:     file format elf32-avr

Sections:
Idx Name          Size      VMA       LMA       File off  Algn
  0 .text         0000024e  00000000  00000000  00000034  2**0
                  CONTENTS, ALLOC, LOAD, RELOC, READONLY, CODE
  1 .data         00000000  00000000  00000000  00000282  2**0
                  CONTENTS, ALLOC, LOAD, DATA
  2 .bss          00000000  00000000  00000000  00000282  2**0
                  ALLOC
  3 .debug_abbrev 000001c9  00000000  00000000  00000282  2**0
                  CONTENTS, READONLY, DEBUGGING
  4 .debug_info   00000a5e  00000000  00000000  0000044b  2**0
                  CONTENTS, RELOC, READONLY, DEBUGGING
  5 .debug_line   0000037a  00000000  00000000  00000ea9  2**0
                  CONTENTS, RELOC, READONLY, DEBUGGING
  6 .progmem.data 0000010b  00000000  00000000  00001223  2**0
                  CONTENTS, ALLOC, LOAD, READONLY, DATA
  7 .debug_frame  000000a0  00000000  00000000  00001330  2**2
                  CONTENTS, RELOC, READONLY, DEBUGGING
  8 .debug_loc    000000e3  00000000  00000000  000013d0  2**0
                  CONTENTS, READONLY, DEBUGGING
  9 .debug_pubnames 0000017f  00000000  00000000  000014b3  2**0
                  CONTENTS, RELOC, READONLY, DEBUGGING
 10 .debug_pubtypes 00000038  00000000  00000000  00001632  2**0
                  CONTENTS, RELOC, READONLY, DEBUGGING
 11 .debug_aranges 00000020  00000000  00000000  0000166a  2**0
                  CONTENTS, RELOC, READONLY, DEBUGGING
 12 .debug_str    0000026d  00000000  00000000  0000168a  2**0
                  CONTENTS, READONLY, DEBUGGING

Disassembly of section .text:

00000000 <spiOut>:
    PORTC |= RIGHT_SS;
}
#endif // 0
void spiOut(unsigned char data)
{
    mosi_push(data);
   0:	0e 94 00 00 	call	0	; 0x0 <spiOut>
}
   4:	08 95       	ret

00000006 <stringOut>:

void stringOut(unsigned char * stringPtr)
{
   6:	cf 93       	push	r28
   8:	df 93       	push	r29
    unsigned char data = pgm_read_byte_near(stringPtr++);
   a:	c8 2f       	mov	r28, r24
   c:	d9 2f       	mov	r29, r25
   e:	fe 01       	movw	r30, r28
  10:	84 91       	lpm	r24, Z+
    while (data)
  12:	00 c0       	rjmp	.+0      	; 0x14 <stringOut+0xe>
    PORTC |= RIGHT_SS;
}
#endif // 0
void spiOut(unsigned char data)
{
    mosi_push(data);
  14:	0e 94 00 00 	call	0	; 0x0 <spiOut>
{
    unsigned char data = pgm_read_byte_near(stringPtr++);
    while (data)
    {
        spiOut (data);
        data = pgm_read_byte_near(stringPtr++);
  18:	fe 01       	movw	r30, r28
  1a:	84 91       	lpm	r24, Z+
  1c:	21 96       	adiw	r28, 0x01	; 1
}

void stringOut(unsigned char * stringPtr)
{
    unsigned char data = pgm_read_byte_near(stringPtr++);
    while (data)
  1e:	88 23       	and	r24, r24
  20:	01 f4       	brne	.+0      	; 0x22 <stringOut+0x1c>
    {
        spiOut (data);
        data = pgm_read_byte_near(stringPtr++);
    //    _delay_ms(1);
    }
}
  22:	df 91       	pop	r29
  24:	cf 91       	pop	r28
  26:	08 95       	ret

00000028 <fastBlink>:

void fastBlink()
{
    stringOut(C0C1);
  28:	80 e0       	ldi	r24, 0x00	; 0
  2a:	90 e0       	ldi	r25, 0x00	; 0
  2c:	0e 94 00 00 	call	0	; 0x0 <spiOut>
	#else
		//round up by default
		__ticks_dc = (uint32_t)(ceil(fabs(__tmp)));
	#endif

	__builtin_avr_delay_cycles(__ticks_dc);
  30:	8f e7       	ldi	r24, 0x7F	; 127
  32:	98 e3       	ldi	r25, 0x38	; 56
  34:	a1 e0       	ldi	r26, 0x01	; 1
  36:	81 50       	subi	r24, 0x01	; 1
  38:	90 40       	sbci	r25, 0x00	; 0
  3a:	a0 40       	sbci	r26, 0x00	; 0
  3c:	01 f4       	brne	.+0      	; 0x3e <fastBlink+0x16>
  3e:	00 c0       	rjmp	.+0      	; 0x40 <fastBlink+0x18>
  40:	00 00       	nop
    _delay_ms(50);
    stringOut(c0c1);
  42:	80 e0       	ldi	r24, 0x00	; 0
  44:	90 e0       	ldi	r25, 0x00	; 0
  46:	0e 94 00 00 	call	0	; 0x0 <spiOut>
}
  4a:	08 95       	ret

0000004c <slowBlink>:


void slowBlink(void)
{ 
    stringOut(strSlowBlink);
  4c:	80 e0       	ldi	r24, 0x00	; 0
  4e:	90 e0       	ldi	r25, 0x00	; 0
  50:	0e 94 00 00 	call	0	; 0x0 <spiOut>
}
  54:	08 95       	ret

00000056 <glanceRight>:

void glanceRight(void)
{
    stringOut(strGlanceRight1);
  56:	80 e0       	ldi	r24, 0x00	; 0
  58:	90 e0       	ldi	r25, 0x00	; 0
  5a:	0e 94 00 00 	call	0	; 0x0 <spiOut>
  5e:	8f ef       	ldi	r24, 0xFF	; 255
  60:	90 e7       	ldi	r25, 0x70	; 112
  62:	a2 e0       	ldi	r26, 0x02	; 2
  64:	81 50       	subi	r24, 0x01	; 1
  66:	90 40       	sbci	r25, 0x00	; 0
  68:	a0 40       	sbci	r26, 0x00	; 0
  6a:	01 f4       	brne	.+0      	; 0x6c <glanceRight+0x16>
  6c:	00 c0       	rjmp	.+0      	; 0x6e <glanceRight+0x18>
  6e:	00 00       	nop
    _delay_ms(100);
    stringOut(strGlanceRight2);
  70:	80 e0       	ldi	r24, 0x00	; 0
  72:	90 e0       	ldi	r25, 0x00	; 0
  74:	0e 94 00 00 	call	0	; 0x0 <spiOut>
  78:	8f ef       	ldi	r24, 0xFF	; 255
  7a:	9d e3       	ldi	r25, 0x3D	; 61
  7c:	a9 e4       	ldi	r26, 0x49	; 73
  7e:	81 50       	subi	r24, 0x01	; 1
  80:	90 40       	sbci	r25, 0x00	; 0
  82:	a0 40       	sbci	r26, 0x00	; 0
  84:	01 f4       	brne	.+0      	; 0x86 <glanceRight+0x30>
  86:	00 c0       	rjmp	.+0      	; 0x88 <glanceRight+0x32>
  88:	00 00       	nop
    _delay_ms(3000);
    stringOut(strGlanceRight3);
  8a:	80 e0       	ldi	r24, 0x00	; 0
  8c:	90 e0       	ldi	r25, 0x00	; 0
  8e:	0e 94 00 00 	call	0	; 0x0 <spiOut>
  92:	8f ef       	ldi	r24, 0xFF	; 255
  94:	91 ee       	ldi	r25, 0xE1	; 225
  96:	a4 e0       	ldi	r26, 0x04	; 4
  98:	81 50       	subi	r24, 0x01	; 1
  9a:	90 40       	sbci	r25, 0x00	; 0
  9c:	a0 40       	sbci	r26, 0x00	; 0
  9e:	01 f4       	brne	.+0      	; 0xa0 <glanceRight+0x4a>
  a0:	00 c0       	rjmp	.+0      	; 0xa2 <glanceRight+0x4c>
  a2:	00 00       	nop
    _delay_ms(200);
    stringOut(strGlanceRight4);
  a4:	80 e0       	ldi	r24, 0x00	; 0
  a6:	90 e0       	ldi	r25, 0x00	; 0
  a8:	0e 94 00 00 	call	0	; 0x0 <spiOut>
  ac:	8f ef       	ldi	r24, 0xFF	; 255
  ae:	91 ee       	ldi	r25, 0xE1	; 225
  b0:	a4 e0       	ldi	r26, 0x04	; 4
  b2:	81 50       	subi	r24, 0x01	; 1
  b4:	90 40       	sbci	r25, 0x00	; 0
  b6:	a0 40       	sbci	r26, 0x00	; 0
  b8:	01 f4       	brne	.+0      	; 0xba <glanceRight+0x64>
  ba:	00 c0       	rjmp	.+0      	; 0xbc <glanceRight+0x66>
  bc:	00 00       	nop
    _delay_ms(200);
}
  be:	08 95       	ret

000000c0 <glanceLeft>:

void glanceLeft(void)
{
    stringOut(strGlanceLeft1);
  c0:	80 e0       	ldi	r24, 0x00	; 0
  c2:	90 e0       	ldi	r25, 0x00	; 0
  c4:	0e 94 00 00 	call	0	; 0x0 <spiOut>
  c8:	8f ef       	ldi	r24, 0xFF	; 255
  ca:	90 e7       	ldi	r25, 0x70	; 112
  cc:	a2 e0       	ldi	r26, 0x02	; 2
  ce:	81 50       	subi	r24, 0x01	; 1
  d0:	90 40       	sbci	r25, 0x00	; 0
  d2:	a0 40       	sbci	r26, 0x00	; 0
  d4:	01 f4       	brne	.+0      	; 0xd6 <glanceLeft+0x16>
  d6:	00 c0       	rjmp	.+0      	; 0xd8 <glanceLeft+0x18>
  d8:	00 00       	nop
    _delay_ms(100);
    stringOut(strGlanceLeft2);
  da:	80 e0       	ldi	r24, 0x00	; 0
  dc:	90 e0       	ldi	r25, 0x00	; 0
  de:	0e 94 00 00 	call	0	; 0x0 <spiOut>
  e2:	8f ef       	ldi	r24, 0xFF	; 255
  e4:	9d e3       	ldi	r25, 0x3D	; 61
  e6:	a9 e4       	ldi	r26, 0x49	; 73
  e8:	81 50       	subi	r24, 0x01	; 1
  ea:	90 40       	sbci	r25, 0x00	; 0
  ec:	a0 40       	sbci	r26, 0x00	; 0
  ee:	01 f4       	brne	.+0      	; 0xf0 <glanceLeft+0x30>
  f0:	00 c0       	rjmp	.+0      	; 0xf2 <glanceLeft+0x32>
  f2:	00 00       	nop
    _delay_ms(3000);
    stringOut(strGlanceLeft3);
  f4:	80 e0       	ldi	r24, 0x00	; 0
  f6:	90 e0       	ldi	r25, 0x00	; 0
  f8:	0e 94 00 00 	call	0	; 0x0 <spiOut>
  fc:	8f ef       	ldi	r24, 0xFF	; 255
  fe:	91 ee       	ldi	r25, 0xE1	; 225
 100:	a4 e0       	ldi	r26, 0x04	; 4
 102:	81 50       	subi	r24, 0x01	; 1
 104:	90 40       	sbci	r25, 0x00	; 0
 106:	a0 40       	sbci	r26, 0x00	; 0
 108:	01 f4       	brne	.+0      	; 0x10a <glanceLeft+0x4a>
 10a:	00 c0       	rjmp	.+0      	; 0x10c <glanceLeft+0x4c>
 10c:	00 00       	nop
    _delay_ms(200);
    stringOut(strGlanceLeft4);
 10e:	80 e0       	ldi	r24, 0x00	; 0
 110:	90 e0       	ldi	r25, 0x00	; 0
 112:	0e 94 00 00 	call	0	; 0x0 <spiOut>
 116:	8f ef       	ldi	r24, 0xFF	; 255
 118:	91 ee       	ldi	r25, 0xE1	; 225
 11a:	a4 e0       	ldi	r26, 0x04	; 4
 11c:	81 50       	subi	r24, 0x01	; 1
 11e:	90 40       	sbci	r25, 0x00	; 0
 120:	a0 40       	sbci	r26, 0x00	; 0
 122:	01 f4       	brne	.+0      	; 0x124 <glanceLeft+0x64>
 124:	00 c0       	rjmp	.+0      	; 0x126 <glanceLeft+0x66>
 126:	00 00       	nop
    _delay_ms(200);
}
 128:	08 95       	ret

0000012a <delay1s>:
 12a:	8f ef       	ldi	r24, 0xFF	; 255
 12c:	90 e7       	ldi	r25, 0x70	; 112
 12e:	a2 e0       	ldi	r26, 0x02	; 2
 130:	81 50       	subi	r24, 0x01	; 1
 132:	90 40       	sbci	r25, 0x00	; 0
 134:	a0 40       	sbci	r26, 0x00	; 0
 136:	01 f4       	brne	.+0      	; 0x138 <delay1s+0xe>
 138:	00 c0       	rjmp	.+0      	; 0x13a <delay1s+0x10>
 13a:	00 00       	nop
 13c:	8f ef       	ldi	r24, 0xFF	; 255
 13e:	90 e7       	ldi	r25, 0x70	; 112
 140:	a2 e0       	ldi	r26, 0x02	; 2
 142:	81 50       	subi	r24, 0x01	; 1
 144:	90 40       	sbci	r25, 0x00	; 0
 146:	a0 40       	sbci	r26, 0x00	; 0
 148:	01 f4       	brne	.+0      	; 0x14a <delay1s+0x20>
 14a:	00 c0       	rjmp	.+0      	; 0x14c <delay1s+0x22>
 14c:	00 00       	nop
 14e:	8f ef       	ldi	r24, 0xFF	; 255
 150:	90 e7       	ldi	r25, 0x70	; 112
 152:	a2 e0       	ldi	r26, 0x02	; 2
 154:	81 50       	subi	r24, 0x01	; 1
 156:	90 40       	sbci	r25, 0x00	; 0
 158:	a0 40       	sbci	r26, 0x00	; 0
 15a:	01 f4       	brne	.+0      	; 0x15c <delay1s+0x32>
 15c:	00 c0       	rjmp	.+0      	; 0x15e <delay1s+0x34>
 15e:	00 00       	nop
 160:	8f ef       	ldi	r24, 0xFF	; 255
 162:	90 e7       	ldi	r25, 0x70	; 112
 164:	a2 e0       	ldi	r26, 0x02	; 2
 166:	81 50       	subi	r24, 0x01	; 1
 168:	90 40       	sbci	r25, 0x00	; 0
 16a:	a0 40       	sbci	r26, 0x00	; 0
 16c:	01 f4       	brne	.+0      	; 0x16e <delay1s+0x44>
 16e:	00 c0       	rjmp	.+0      	; 0x170 <delay1s+0x46>
 170:	00 00       	nop
 172:	8f ef       	ldi	r24, 0xFF	; 255
 174:	90 e7       	ldi	r25, 0x70	; 112
 176:	a2 e0       	ldi	r26, 0x02	; 2
 178:	81 50       	subi	r24, 0x01	; 1
 17a:	90 40       	sbci	r25, 0x00	; 0
 17c:	a0 40       	sbci	r26, 0x00	; 0
 17e:	01 f4       	brne	.+0      	; 0x180 <delay1s+0x56>
 180:	00 c0       	rjmp	.+0      	; 0x182 <delay1s+0x58>
 182:	00 00       	nop
 184:	8f ef       	ldi	r24, 0xFF	; 255
 186:	90 e7       	ldi	r25, 0x70	; 112
 188:	a2 e0       	ldi	r26, 0x02	; 2
 18a:	81 50       	subi	r24, 0x01	; 1
 18c:	90 40       	sbci	r25, 0x00	; 0
 18e:	a0 40       	sbci	r26, 0x00	; 0
 190:	01 f4       	brne	.+0      	; 0x192 <delay1s+0x68>
 192:	00 c0       	rjmp	.+0      	; 0x194 <delay1s+0x6a>
 194:	00 00       	nop
 196:	8f ef       	ldi	r24, 0xFF	; 255
 198:	90 e7       	ldi	r25, 0x70	; 112
 19a:	a2 e0       	ldi	r26, 0x02	; 2
 19c:	81 50       	subi	r24, 0x01	; 1
 19e:	90 40       	sbci	r25, 0x00	; 0
 1a0:	a0 40       	sbci	r26, 0x00	; 0
 1a2:	01 f4       	brne	.+0      	; 0x1a4 <delay1s+0x7a>
 1a4:	00 c0       	rjmp	.+0      	; 0x1a6 <delay1s+0x7c>
 1a6:	00 00       	nop
 1a8:	8f ef       	ldi	r24, 0xFF	; 255
 1aa:	90 e7       	ldi	r25, 0x70	; 112
 1ac:	a2 e0       	ldi	r26, 0x02	; 2
 1ae:	81 50       	subi	r24, 0x01	; 1
 1b0:	90 40       	sbci	r25, 0x00	; 0
 1b2:	a0 40       	sbci	r26, 0x00	; 0
 1b4:	01 f4       	brne	.+0      	; 0x1b6 <delay1s+0x8c>
 1b6:	00 c0       	rjmp	.+0      	; 0x1b8 <delay1s+0x8e>
 1b8:	00 00       	nop
 1ba:	8f ef       	ldi	r24, 0xFF	; 255
 1bc:	90 e7       	ldi	r25, 0x70	; 112
 1be:	a2 e0       	ldi	r26, 0x02	; 2
 1c0:	81 50       	subi	r24, 0x01	; 1
 1c2:	90 40       	sbci	r25, 0x00	; 0
 1c4:	a0 40       	sbci	r26, 0x00	; 0
 1c6:	01 f4       	brne	.+0      	; 0x1c8 <delay1s+0x9e>
 1c8:	00 c0       	rjmp	.+0      	; 0x1ca <delay1s+0xa0>
 1ca:	00 00       	nop
 1cc:	8f ef       	ldi	r24, 0xFF	; 255
 1ce:	90 e7       	ldi	r25, 0x70	; 112
 1d0:	a2 e0       	ldi	r26, 0x02	; 2
 1d2:	81 50       	subi	r24, 0x01	; 1
 1d4:	90 40       	sbci	r25, 0x00	; 0
 1d6:	a0 40       	sbci	r26, 0x00	; 0
 1d8:	01 f4       	brne	.+0      	; 0x1da <delay1s+0xb0>
 1da:	00 c0       	rjmp	.+0      	; 0x1dc <delay1s+0xb2>
 1dc:	00 00       	nop
    _delay_ms(100);
    _delay_ms(100);
    _delay_ms(100);
    _delay_ms(100);
    _delay_ms(100);
}
 1de:	08 95       	ret

000001e0 <testMain>:

void testMain(void)
{
    DDRC |= _BV(0) | _BV(1) |_BV(2);
 1e0:	87 b1       	in	r24, 0x07	; 7
 1e2:	87 60       	ori	r24, 0x07	; 7
 1e4:	87 b9       	out	0x07, r24	; 7
    DDRB |= _BV(1) | _BV(2);
 1e6:	84 b1       	in	r24, 0x04	; 4
 1e8:	86 60       	ori	r24, 0x06	; 6
 1ea:	84 b9       	out	0x04, r24	; 4
    PORTC |= _BV(2); // leave reset high
 1ec:	42 9a       	sbi	0x08, 2	; 8
    while (1)
    {
        SET_LEFT_SS;
 1ee:	40 9a       	sbi	0x08, 0	; 8
        delay1s();
 1f0:	0e 94 00 00 	call	0	; 0x0 <spiOut>
        RESET_LEFT_SS;
 1f4:	40 98       	cbi	0x08, 0	; 8
        delay1s();
 1f6:	0e 94 00 00 	call	0	; 0x0 <spiOut>
        SET_RIGHT_SS;
 1fa:	41 9a       	sbi	0x08, 1	; 8
        delay1s();
 1fc:	0e 94 00 00 	call	0	; 0x0 <spiOut>
        RESET_RIGHT_SS;
 200:	41 98       	cbi	0x08, 1	; 8

        SET_SCK;
 202:	29 9a       	sbi	0x05, 1	; 5
        delay1s();
 204:	0e 94 00 00 	call	0	; 0x0 <spiOut>
        RESET_SCK;
 208:	29 98       	cbi	0x05, 1	; 5

        SET_MOSI;
 20a:	2a 9a       	sbi	0x05, 2	; 5
        delay1s();
 20c:	0e 94 00 00 	call	0	; 0x0 <spiOut>
        RESET_MOSI;
 210:	2a 98       	cbi	0x05, 2	; 5
 212:	00 c0       	rjmp	.+0      	; 0x214 <main>

00000214 <main>:
    }
}

int main(void)
{
 214:	cf 93       	push	r28
    // A little settling time...
    //_delay_ms(10);
    // initialize

//    DDRC = _BV(0) | _BV(1) | _BV(2); // left ss right ss rst
    DDRC = LEFT_SS | RIGHT_SS | BOTH_RESET;
 216:	87 e0       	ldi	r24, 0x07	; 7
 218:	87 b9       	out	0x07, r24	; 7
    PORTC = LEFT_SS | RIGHT_SS | BOTH_RESET;
 21a:	88 b9       	out	0x08, r24	; 8
    spi_init();
 21c:	0e 94 00 00 	call	0	; 0x0 <spiOut>

    delay1s();
 220:	0e 94 00 00 	call	0	; 0x0 <spiOut>
    data = 'x';
 224:	c8 e7       	ldi	r28, 0x78	; 120
    PORTC |= RIGHT_SS;
}
#endif // 0
void spiOut(unsigned char data)
{
    mosi_push(data);
 226:	81 e6       	ldi	r24, 0x61	; 97
 228:	0e 94 00 00 	call	0	; 0x0 <spiOut>
 22c:	8f ec       	ldi	r24, 0xCF	; 207
 22e:	97 e0       	ldi	r25, 0x07	; 7
 230:	01 97       	sbiw	r24, 0x01	; 1
 232:	01 f4       	brne	.+0      	; 0x234 <main+0x20>
 234:	00 c0       	rjmp	.+0      	; 0x236 <main+0x22>
 236:	00 00       	nop
 238:	8c 2f       	mov	r24, r28
 23a:	0e 94 00 00 	call	0	; 0x0 <spiOut>
 23e:	8f ec       	ldi	r24, 0xCF	; 207
 240:	97 e0       	ldi	r25, 0x07	; 7
 242:	01 97       	sbiw	r24, 0x01	; 1
 244:	01 f4       	brne	.+0      	; 0x246 <main+0x32>
 246:	00 c0       	rjmp	.+0      	; 0x248 <main+0x34>
 248:	00 00       	nop
        _delay_ms(1);
        spiOut(data);
        //delay1s();
        _delay_ms(1);
    //delay1s();
        data++;
 24a:	cf 5f       	subi	r28, 0xFF	; 255
 24c:	00 c0       	rjmp	.+0      	; 0x24e <main+0x3a>
